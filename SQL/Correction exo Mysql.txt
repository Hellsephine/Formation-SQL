/*Exercices*/
/*Série1*/
/*1*/
select name from language;

/*2*/
select address, district from address;

/*3*/
select * from inventory;

/*4*/
select first_name from customer;

/*5*/
select film_id, title, release_year from film;
select * from film;

/*6*/
select film_id, title, length from film
where length between 50 and 90;

/*7*/
select address_id, address from address
where address like "%Mysore Drive%";

/*8*/
select customer_id, last_name from customer
where last_name like "M%";

/*9*/
select actor_id, film_id from film_actor
where film_id in(4,12,33);

/*10*/
select * from payment;
select payment_id, amount/1.20 as prix_HT from payment
where payment_id<=10;

/*----------------------------------------------*/
/*Série2*/
 /*1*/
 select actor_id, last_name, first_name from actor;
 
 /*2*/
 select title, description from film
 where film_id between 780 and 800;

/*3*/
select rental_id from rental where customer_id=5;

/*4*/
select * from customer;
select customer_id from customer
where active!=1
order by store_id;

/*5*/
select customer_id from customer
where last_name="BROOKS" and active=1;

/*6*/
select customer_id, last_name from customer
where last_name not like "%E%";

/*7*/
select actor_id from film_actor
where film_id=1 and actor_id>100;

/*8*/
select actor_id, last_name from actor 
where last_name like "%W%";

/*9*/
select rental_id from payment
where amount=0;

/*10*/
select staff_id, first_name, last_name from staff
where password is null;

/*Jointures*/

/*Jointures Série 1 : 1 Nom et prénom des acteurs du film N° 5*/
select first_name, last_name 
from actor 
inner join film_actor 
 on actor.actor_id= film_actor.actor_id
where film_actor.film_id = 5;

/*Jointures Série 1 : 2 Liste des adresses situées à « Bamenda »*/
select address, postal_code, city from city 
inner join address
	on address.city_id = city.city_id
where city="Bamenda";

/*Jointures Série 1 : 3 Afficher le nom des films 3, 5 et 7 ainsi que la liste de leurs acteurs*/
select * from film;/*film_id*/
select * from film_actor;/*film_id et actor_id*/
select * from actor;/*actor_id*/

select title, first_name, last_name
from film 
inner join film_actor
	on film.film_id = film_actor.film_id
inner join actor
	on actor.actor_id = film_actor.actor_id 
where film.film_id in (3,5,7);

/*Jointures Série 1 :4 : liste des noms des films dispo dans le magasin 2*/
select *from store;
select *from inventory;
select *from film;

select distinct title from film
inner join inventory 
	on inventory.film_id = film.film_id
inner join store
	on store.store_id = inventory.store_id
        where inventory.store_id=2 ;

/*Jointures Série 1 : 5 Afficher les données complète des clients (prénom,nom, email, adresse, ville, pays*/
select * from customer;/*address_id*/
select * from address; /*adress et address_id et city_id*/
select * from city;/*country_id*/
select * from country;/*country_id*/

select first_name, last_name, email, address, city, country
from customer
inner join address 
	on customer.address_id = address.address_id
inner join city
	on city.city_id = address.city_id
inner join country
	on country.country_id = city.country_id;

/*Jointures Série 1 : 6 idem par ordre alphabétique*/
select first_name, last_name, email, address, city, country
from customer
inner join address 
	on customer.address_id = address.address_id
inner join city
	on city.city_id = address.city_id
inner join country
	on country.country_id = city.country_id
order by customer.first_name, customer.last_name ASC;

/*Série 2 Jointures*/

/*Jointures Série 2 : 1 Liste des acteurs ayant le même prénom*/
select * from actor;
select a1.first_name, a1.last_name, a2.first_name, a2.last_name 
from actor a1
inner join actor a2
	on a1.actor_id > a2.actor_id
where a1.first_name = a2.first_name ;

select a1.first_name, a1.last_name, a2.first_name, a2.last_name 
from actor a1
inner join actor a2
	on a1.first_name like a2.first_name
where a1.actor_id > a2.actor_id ;

/*Jointures Série 2 :2 Trouver les combinaisons de villes du même district*/

select *from address; /*city_id and district*/
select * from city; /*city_id*/

select  distinct c1.city , c2.city  
from city c1
inner join address a1
	on a1.city_id = c1.city_id
inner join address a2
	on a2.city_id > a1.city_id    
inner join city c2
	on c2.city_id = a2.city_id
where a1.district = a2.district
order by c1.city ASC;

select distinct c1.city, c2.city
from address as a1
inner join city c1
on c1.city_id = a1.city_id
inner join address a2
on a1.district = a2.district
inner join city c2
on c2.city_id = a2.city_id
where c1.city >c2.city
order by c1.city, c2.city;

/*Jointures Série 2 : 3. Trouver la liste des films loués par le client 300*/

select title from film f1
inner join inventory
	on f1.film_id = inventory.film_id
inner join rental
	on rental.inventory_id = inventory.inventory_id
inner join customer	
	on customer.customer_id = rental.customer_id
where customer.customer_id=300 ;



/*Jointures Série 2 : 4 Liste des films de la catégorie 7*/
select title from film
inner join film_category
	on film.film_id = film_category.film_id
where film_category.category_id=7;


/*Jointures Série 2 : 
5*Les noms des clients ayants profités de locations gratuites ainsi que le nom du film en
question*/

select first_name, last_name, title 
from customer
inner join rental
	on customer.customer_id = rental.customer_id
inner join payment
	on payment.rental_id = rental.rental_id  
inner join inventory
	on rental.inventory_id = inventory.inventory_id
inner join film
	on film.film_id = inventory.film_id

where payment.amount=0;

/*Jointures Série 2 : 6 La liste des gens ayant loué un film en Mandarin*/
select first_name, last_name from language
inner join film
	on language.language_id = film.language_id
inner join inventory
	on inventory.film_id = film.film_id
inner join rental
	on rental.inventory_id = inventory.inventory_id
inner join customer
	on rental.customer_id = rental.customer_id
    inner join payment
	on customer.customer_id = payment.customer_id
where language.name="Mandarin" and payment.amount=0;

/*Fonctions d’agrégations/

/*Fonctions d’agrégations - 1. Le chiffre d’affaire total sur tous les magasins*/

select sum(amount) from payment;

/*Fonctions d’agrégations - 2 Le chiffre d’affaire total du magasin 1*/
select sum(payment.amount) as "CA Store1" from store
inner join staff
	on staff.store_id = store.store_id
inner join payment
	on payment.staff_id = staff.staff_id
where store.store_id=1;

/*Fonctions d’agrégations - 3 Le prix de vente moyen d’une location*/
select avg(payment.amount) from rental
inner join payment
	on payment.rental_id = rental.rental_id;
    
/*Fonctions d’agrégations - 4 Combien de films qui n’ont pas été rendus?*/
select count(rental.rental_id) as "Films non rendus" from rental
where return_date is null;

/*Fonctions d’agrégations - 5. Combien de personnes qui n’ont pas rendu leur location?*/

select count(distinct customer.customer_id) as "Mauvais clients qui ne rendent pas nos DVD" from customer
inner join rental
	on rental.customer_id = customer.customer_id
where return_date is null ;

/*Fonctions d’agrégations - 6 Le nombre de clients par pays (pays ayant plus d’un client)*/
/*customer, address, ciity, country*/

select  country.country, count(customer.customer_id) as "nb Clients/pays"  from customer
inner join address
	on address.address_id = customer.address_id
inner join city
	on city.city_id = address.city_id
inner join country
	on country.country_id = city.country_id
group by country
having count(customer.customer_id)>1
order by country.country;

/*Fonctions d’agrégations - 7 Les 10 clients ayant loués le plus de films*/
select * from rental;
select distinct first_name,count(r1.rental_id) as"Nb DVD Loués" , customer.customer_id
from rental r1
inner join customer
	on customer.customer_id =r1.customer_id
group by r1.customer_id
order by count(r1.rental_id) DESC
LIMIT 10;

/*Fonctions d’agrégations - 8 Les 10 clients les plus rentables*/
/*customer, rental, payment*/

select first_name, customer.customer_id, sum(payment.amount) as "paiements" 
from customer
inner join rental
	on rental.customer_id = customer.customer_id
inner join payment
	on payment.rental_id = rental.rental_id
group by customer.customer_id /*si on le groupBy name on compte à partir du name*/ 
order by sum(payment.amount) DESC
limit 10;

/*Fonctions d’agrégations - 9. Les films ayant le plus d’acteur ainsi que leur titre*/
/*film, film_actor, actor, */
select f1.title, count(actor.actor_id) as nbActeurs from film f1
inner join film_actor
	on f1.film_id = film_actor.film_id
inner join actor
	on actor.actor_id = film_actor.actor_id
group by f1.title
order by nbActeurs DESC
limit 5;

/*Fonctions d’agrégations - 10. L’acteur ayant tourné dans le moins de films resultats escomptés idActor 148*/
select f1.title, count(film_actor.film_id) as nbFilms, actor.actor_id as idActor
from film_actor
inner join actor
	on actor.actor_id = film_actor.actor_id    
inner join film f1
	on f1.film_id = film_actor.film_id
group by idActor
order by nbFilms ASC
limit 1;

/*Fonctions d’agrégations - 11. Le temps total que cela nous prendrais à 
regarder toute la collection de film disponible dans le
magasin numéro 1 (en heures arrondies au supérieur) ======= 1455

select ceil(sum(length)/ 60) as nb_heures
from film
where film_id in
(select distinct film_id 
from inventory 
where language_id = 1);

/*Fonctions d’agrégations - 12. Est-ce qu’il y a des adresses avec plus d’un client ?*/
select address_id, count(customer_id)
from customer
group by customer_id
having count(customer_id) > 2;

/Sous requête/
/1/ select name from language where language_id not in (select language_id from film);
/2/ select title from film as f where exists(select "" from rental as r inner join inventory as i on i.inventory_id = r.inventory_id where f.film_id = i.film_id and return_date is null);